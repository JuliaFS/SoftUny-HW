import java.util.ArrayList;

import Helpers.Card;

/*
 * In most Poker games, the "full house" hand is
 * defined as three cards of the same face +
 * two cards of the same face, other than the first,
 * regardless of the card's suits. The cards faces are
 * "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q",
 * "K" and "A". The card suits are "♣", "♦", "♥" and "♠".
 * Write a program to generate and
 * print all full houses and print their number.
 */
public class FullHousesPrinter {

	public static void main(String[] args) {
		createDeck();
		
	}
	
	private static void printFullHouses(Card[] deck) {
		
	}

	private static void createDeck() {
		String[] ranks = { "2", "3", "4", "5", "6", "7",
				"8", "9", "10", "J", "Q", "K", "A" };
		char[] suits = { '\u2660', '\u2665', '\u2666', '\u2663' };
		int fullHousesCount = 0;
		
		for (String rank : ranks) {
			for (char firstCardSuit : suits) {
				for (char secondCardSuit : suits) {
					for (char thirdCardSuit: suits) {	
						
						for (String secondPairRank : ranks) {
							if (rank == secondPairRank) {
								continue;
							}
							for (char _firstCardSuit : suits) {
								for (char _secondCardSuit : suits) {
									//System.out.printf("%s%c %s%c %s%c %s%c %s%c",
											//rank, firstCardSuit, rank, secondCardSuit, rank, thirdCardSuit,
											//secondPairRank, _firstCardSuit, secondPairRank, _secondCardSuit);
									fullHousesCount++;
								}
							}
						}
					}
				}
			}
		}
		System.out.println(fullHousesCount);
	}
	
}
