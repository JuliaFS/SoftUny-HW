import java.io.File;
import java.io.FileInputStream;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/* Problem 11
 * You are given an Excel file Incomes-Report.xlsx holding an incomes report.
 * Each office puts in this Excel file all their incomes
 * (office, date, description, income, 20% VAT, total income).
 * Your task is to read the report and to calculate the
 * incomes sub-totals for each office (with VAT).
 * Order the offices alphabetically. Print the result at
 * the console in format town Total -> incomes.
 * Finally calculate and print the grand total
 * (the sum of all incomes in all offices).
 */
public class ExcelReader {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		readSheetWithFormula();
	}
	
	public static void readSheetWithFormula()
	{
	    try
	    {
	        FileInputStream file = new FileInputStream(new File("Incomes-Report.xlsx"));
	 
	        //Create Workbook instance holding reference to .xlsx file
	        XSSFWorkbook workbook = new XSSFWorkbook(file);
	         
	        //Get first/desired sheet from the workbook
	        XSSFSheet sheet = workbook.getSheetAt(0);
	 
	        //Iterate through each rows one by one
	        Iterator<Row> rowIterator = sheet.iterator();
	        rowIterator.next();
	        
	        while (rowIterator.hasNext())
	        {
	            Row row = rowIterator.next();
	            
	            Cell cell = row.getCell(2);
	            System.out.println(cell.getStringCellValue());
	            //For each row, iterate through all the columns
	            Iterator<Cell> cellIterator = row.cellIterator();
	             
	            
	        }
	        file.close();
	    }
	    catch (Exception e)
	    {
	        e.printStackTrace();
	    }
	}
}
