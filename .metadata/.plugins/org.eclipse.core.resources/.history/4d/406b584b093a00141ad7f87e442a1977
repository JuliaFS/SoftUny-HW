import java.awt.geom.Point2D;
import java.awt.geom.Point2D.Float;
import java.util.Locale;
import java.util.Scanner;

/*
 * Write a program to check whether a point is
 * inside or outside the house below.
 * The point is given as a pair of floating-point numbers, 
 * separated by a space. Your program should print "Inside" or "Outside".
 */
public class Problem_09_PointsInsideHouse {
	private static Float[] housePoints = {
		new Point2D.Float( 12.5F, 8.5F ),
		new Point2D.Float( 17.5F, 3.5F ),
		new Point2D.Float( 22.5F, 8.5F ),
		new Point2D.Float( 22.5F, 13.5F ),
		new Point2D.Float( 20.0F, 13.5F ),
		new Point2D.Float( 20.0F, 8.5F ),
		new Point2D.Float( 17.5F, 8.5F ),
		new Point2D.Float( 17.5F, 13.5F ),
		new Point2D.Float( 12.5F, 13.5F )
	};
	
	public static void main(String[] args) {
		Locale.setDefault( Locale.ROOT );
		
		@SuppressWarnings("resource")
		Scanner scanner = new Scanner( System.in );
		float xPos = scanner.nextFloat();
		float yPos = scanner.nextFloat();
		Float inputPoint = new Point2D.Float( xPos, yPos );
		boolean isInside = true;
		
		for ( int i = 0; i < housePoints.length - 2; i++ ) {
			if ( !isRightOrColinear( housePoints[ i ], housePoints[ i + 1 ],
					inputPoint )) {
				isInside = false;
				break;
			}
		}
		
		
		
		String msg = isInside ? "Inside" : "Outside";
		System.out.println( msg );
	}
	public static boolean isInside( Float inputPoint ) {
		boolean isInside = true;
		
		return isInside;
	}
	
	public static boolean isRightOrColinear( Point2D.Float a,
			Point2D.Float b, Point2D.Float c ) {
		return ( ( b.x - a.x ) * ( c.y - a.y ) -
				( b.y - a.y ) * ( c.x - a.x ) ) >= 0;
	}
}
